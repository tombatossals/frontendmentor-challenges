{"version":3,"file":"component---src-pages-country-country-slug-js-d12c855fc2ad46096ce8.js","mappings":"yNAgBA,IACA,EADiB,cAdjB,SAAuBA,EAAOC,GAC5B,OAAoB,gBAAoB,MAAOC,OAAOC,OAAO,CAC3DC,MAAO,6BACPC,QAAS,YACTC,KAAM,eACN,cAAe,OACfC,IAAKN,GACJD,GAAqB,gBAAoB,OAAQ,CAClDQ,SAAU,UACVC,EAAG,wIACHC,SAAU,gB,6BCiId,EAtIoB,SAAC,GAAuC,IAAD,IAApCC,KAAQC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,WAChCC,GAAQC,EAAAA,EAAAA,GAASH,EAAQI,YAEvBC,EAAWC,EAAAA,WAAiBC,EAAAA,GAA5BF,OAEFG,EACJP,EAAWQ,OACXR,EAAWQ,MAAMC,QACf,SAAAC,GAAC,OAAIX,EAAQQ,SAAWR,EAAQQ,QAAQI,SAASD,EAAEE,SAIvD,OAFAL,EAAQM,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,KAAOD,EAAEC,KAAO,EAAID,EAAEC,KAAOF,EAAEE,MAAQ,EAAI,KAGnE,gCACE,gBAAC,IAAD,CAAKC,MAAOlB,EAAQmB,KAAKC,SAEzB,uBAAKC,UAAU,qCACb,gBAAC,EAAAC,KAAD,CACEC,GAAIlB,EAAM,WAAcA,EAAW,IACnCgB,UAAU,0GAEV,gBAAC,EAAD,CAAeA,UAAU,iBAJ3B,SAMA,uBAAKA,UAAU,iBACb,gBAAC,EAAAG,EAAD,CACEH,UAAU,wBACVnB,MAAOA,EACPuB,IAAQzB,EAAQmB,KAAKC,OAAlB,WAEL,uBAAKC,UAAU,mBACb,sBAAIA,UAAU,4BAA4BrB,EAAQmB,KAAKC,QACvD,uBAAKC,UAAU,WACb,sBAAIA,UAAU,UACZ,sBAAIA,UAAU,QACZ,8CADF,IACiCrB,EAAQmB,KAAKO,YAE9C,sBAAIL,UAAU,QACZ,6CAA6B,KAC5BM,EAAAA,EAAAA,GAAa3B,EAAQ4B,aAExB,sBAAIP,UAAU,QACZ,yCADF,IAC4BrB,EAAQK,QAEnCL,EAAQ6B,WACP,sBAAIR,UAAU,QACZ,6CADF,IACgCrB,EAAQ6B,WAGzC7B,EAAQ8B,SACP,sBAAIT,UAAU,QACZ,0CADF,IAC6BrB,EAAQ8B,UAIzC,sBAAIT,UAAU,wBACZ,sBAAIA,UAAU,QACZ,mDADF,IACsCrB,EAAQ+B,KAE7C/B,EAAQgC,YACP,sBAAIX,UAAU,QACZ,6CADF,IACgCrB,EAAQgC,WAAWC,KAAK,OAGzDjC,EAAQkC,WACP,sBAAIb,UAAU,QACZ,4CADF,IAC+BrB,EAAQkC,UAAUD,KAAK,SAK3DzB,EAAQ2B,OAAS,GAChB,uBAAKd,UAAU,QACb,0BAAQA,UAAU,0CAAlB,qBAGA,2BACGb,EAAQ4B,KAAI,SAAApB,GAAC,OACZ,gBAAC,EAAAM,KAAD,CACEC,GAAE,YAAcP,EAAEC,KAClBoB,IAAKrB,EAAEC,KACPI,UAAU,4FAETL,EAAEG,KAAKC","sources":["webpack://rest-countries-api-gatsby/./node_modules/@heroicons/react/solid/esm/ArrowLeftIcon.js","webpack://rest-countries-api-gatsby/./src/pages/country/{country.slug}.js"],"sourcesContent":["import * as React from \"react\";\n\nfunction ArrowLeftIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z\",\n    clipRule: \"evenodd\"\n  }));\n}\n\nvar ForwardRef = React.forwardRef(ArrowLeftIcon);\nexport default ForwardRef;","import * as React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport Seo from \"../../components/seo\"\nimport { ArrowLeftIcon } from \"@heroicons/react/solid\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport { formatNumber } from \"../../lib/utils\"\nimport { RegionContext } from \"../../context/region\"\nconst CountryPage = ({ data: { country, allCountry } }) => {\n  const image = getImage(country.localImage)\n\n  const { region } = React.useContext(RegionContext)\n\n  const borders =\n    allCountry.nodes &&\n    allCountry.nodes.filter(\n      c => country.borders && country.borders.includes(c.cca3)\n    )\n  borders.sort((a, b) => (a.slug > b.slug ? 1 : b.slug > a.slug ? -1 : 0))\n\n  return (\n    <>\n      <Seo title={country.name.common} />\n\n      <div className=\"py-10 mx-20 country flex flex-col\">\n        <Link\n          to={region ? `/region/${region}` : \"/\"}\n          className=\"font-semibold py-2 px-6 w-28 element rounded shadow flex items-center flex-initial hover:brightness-95\"\n        >\n          <ArrowLeftIcon className=\"w-4 h-5 mr-2\" /> Back\n        </Link>\n        <div className=\"mt-20 xl:flex\">\n          <GatsbyImage\n            className=\"max-w-full max-h-full\"\n            image={image}\n            alt={`${country.name.common} flag}`}\n          />\n          <div className=\"flex-2 xl:pl-20\">\n            <h1 className=\"font-bold text-2xl my-10\">{country.name.common}</h1>\n            <div className=\"xl:flex\">\n              <ul className=\"flex-1\">\n                <li className=\"mb-3\">\n                  <strong>Native Name:</strong> {country.name.nativeName}\n                </li>\n                <li className=\"mb-3\">\n                  <strong>Population:</strong>{\" \"}\n                  {formatNumber(country.population)}\n                </li>\n                <li className=\"mb-3\">\n                  <strong>Region:</strong> {country.region}\n                </li>\n                {country.subregion && (\n                  <li className=\"mb-3\">\n                    <strong>Sub Region:</strong> {country.subregion}\n                  </li>\n                )}\n                {country.capital && (\n                  <li className=\"mb-3\">\n                    <strong>Capital:</strong> {country.capital}\n                  </li>\n                )}\n              </ul>\n              <ul className=\"flex-1 mt-10 xl:mt-0\">\n                <li className=\"mb-3\">\n                  <strong>Top Level Domain:</strong> {country.tld}\n                </li>\n                {country.currencies && (\n                  <li className=\"mb-3\">\n                    <strong>Currencies:</strong> {country.currencies.join(\", \")}\n                  </li>\n                )}\n                {country.languages && (\n                  <li className=\"mb-3\">\n                    <strong>Languages:</strong> {country.languages.join(\", \")}\n                  </li>\n                )}\n              </ul>\n            </div>\n            {borders.length > 0 && (\n              <div className=\"mt-8\">\n                <strong className=\"mr-4 whitespace-nowrap lg:inline-block\">\n                  Border countries:\n                </strong>\n                <div>\n                  {borders.map(b => (\n                    <Link\n                      to={`/country/${b.slug}`}\n                      key={b.slug}\n                      className=\"font-semibold mr-2 my-2 py-1 px-6 element rounded shadow inline-flex hover:brightness-95\"\n                    >\n                      {b.name.common}\n                    </Link>\n                  ))}\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport const query = graphql`\n  query ($slug: String) {\n    country(slug: { eq: $slug }) {\n      id\n      slug\n      name {\n        common\n        nativeName\n      }\n      population\n      region\n      subregion\n      languages\n      tld\n      capital\n      borders\n      currencies\n      localImage {\n        childImageSharp {\n          gatsbyImageData(\n            width: 1280\n            placeholder: BLURRED\n            formats: [AUTO, WEBP]\n          )\n        }\n      }\n    }\n    allCountry {\n      nodes {\n        slug\n        name {\n          common\n        }\n        cca3\n      }\n    }\n  }\n`\n\nexport default CountryPage\n"],"names":["props","svgRef","Object","assign","xmlns","viewBox","fill","ref","fillRule","d","clipRule","data","country","allCountry","image","getImage","localImage","region","React","RegionContext","borders","nodes","filter","c","includes","cca3","sort","a","b","slug","title","name","common","className","Link","to","G","alt","nativeName","formatNumber","population","subregion","capital","tld","currencies","join","languages","length","map","key"],"sourceRoot":""}